--- a/web/gui/dashboard_info.js
+++ b/web/gui/dashboard_info.js
@@ -12,16 +12,15 @@
 
 netdataDashboard.menu = {
     'system': {
-        title: 'System Overview',
+        title: '系统概述',
         icon: '<i class="fas fa-bookmark"></i>',
-        info: 'Overview of the key system metrics.'
+        info: '一眼掌握系统效能关键指标。'
     },
 
     'services': {
-        title: 'systemd Services',
+        title: '系统服务',
         icon: '<i class="fas fa-cogs"></i>',
-        info: 'Resources utilization of systemd services. netdata monitors all systemd services via CGROUPS ' +
-            '(the resources accounting used by containers). '
+        info: '系统服务的使用情况。netdata 以 CGROUPS 监视所有系统服务。'
     },
 
     'ap': {
@@ -45,19 +44,19 @@
     },
 
     'net': {
-        title: 'Network Interfaces',
+        title: '网络接口',
         icon: '<i class="fas fa-sitemap"></i>',
-        info: 'Performance metrics for network interfaces.'
+        info: '网络界面的性能指标。'
     },
 
     'wireless': {
-        title: 'Wireless Interfaces',
+        title: '无线接口',
         icon: '<i class="fas fa-wifi"></i>',
-        info: 'Performance metrics for wireless interfaces.'
+        info: '无线接口的性能指标。'
     },
 
     'ip': {
-        title: 'Networking Stack',
+        title: '网络堆栈',
         icon: '<i class="fas fa-cloud"></i>',
         info: function (os) {
             if (os === "linux")
@@ -68,9 +67,9 @@
     },
 
     'ipv4': {
-        title: 'IPv4 Networking',
+        title: 'IPv4网络',
         icon: '<i class="fas fa-cloud"></i>',
-        info: 'Metrics for the IPv4 stack of the system. ' +
+        info: 'IPv4效能指标。' +
             '<a href="https://en.wikipedia.org/wiki/IPv4" target="_blank">Internet Protocol version 4 (IPv4)</a> is ' +
             'the fourth version of the Internet Protocol (IP). It is one of the core protocols of standards-based ' +
             'internetworking methods in the Internet. IPv4 is a connectionless protocol for use on packet-switched ' +
@@ -80,57 +79,57 @@
     },
 
     'ipv6': {
-        title: 'IPv6 Networking',
+        title: 'IPv6网络',
         icon: '<i class="fas fa-cloud"></i>',
-        info: 'Metrics for the IPv6 stack of the system. <a href="https://en.wikipedia.org/wiki/IPv6" target="_blank">Internet Protocol version 6 (IPv6)</a> is the most recent version of the Internet Protocol (IP), the communications protocol that provides an identification and location system for computers on networks and routes traffic across the Internet. IPv6 was developed by the Internet Engineering Task Force (IETF) to deal with the long-anticipated problem of IPv4 address exhaustion. IPv6 is intended to replace IPv4.'
+        info: 'IPv6 性能指标。 <a href="https://en.wikipedia.org/wiki/IPv6" target="_blank">Internet 协议版本 6 (IPv6)</a> 是 Internet 协议的最新版本（ IP），一种通信协议，为网络上的计算机提供识别和定位系统，并通过 Internet 路由流量。 IPv6 是由 Internet 工程任务组 (IETF) 开发的，用于解决期待已久的 IPv4 地址耗尽问题。 IPv6 旨在取代 IPv4。'
     },
 
     'sctp': {
-        title: 'SCTP Networking',
+        title: 'SCTP 网络',
         icon: '<i class="fas fa-cloud"></i>',
         info: '<a href="https://en.wikipedia.org/wiki/Stream_Control_Transmission_Protocol" target="_blank">Stream Control Transmission Protocol (SCTP)</a> is a computer network protocol which operates at the transport layer and serves a role similar to the popular protocols TCP and UDP. SCTP provides some of the features of both UDP and TCP: it is message-oriented like UDP and ensures reliable, in-sequence transport of messages with congestion control like TCP. It differs from those protocols by providing multi-homing and redundant paths to increase resilience and reliability.'
     },
 
     'ipvs': {
-        title: 'IP Virtual Server',
+        title: 'IP 虚拟服务器',
         icon: '<i class="fas fa-eye"></i>',
         info: '<a href="http://www.linuxvirtualserver.org/software/ipvs.html" target="_blank">IPVS (IP Virtual Server)</a> implements transport-layer load balancing inside the Linux kernel, so called Layer-4 switching. IPVS running on a host acts as a load balancer at the front of a cluster of real servers, it can direct requests for TCP/UDP based services to the real servers, and makes services of the real servers to appear as a virtual service on a single IP address.'
     },
 
     'netfilter': {
-        title: 'Firewall (netfilter)',
+        title: '防火墙 (filter)',
         icon: '<i class="fas fa-shield-alt"></i>',
-        info: 'Performance metrics of the netfilter components.'
+        info: 'netfilter组件的性能指标。'
     },
 
     'ipfw': {
-        title: 'Firewall (ipfw)',
+        title: '防火墙(ipfw)',
         icon: '<i class="fas fa-shield-alt"></i>',
-        info: 'Counters and memory usage for the ipfw rules.'
+        info: 'ipfw规则的计数器和内存使用情况。'
     },
 
     'cpu': {
         title: 'CPUs',
         icon: '<i class="fas fa-bolt"></i>',
-        info: 'Detailed information for each CPU of the system. A summary of the system for all CPUs can be found at the <a href="#menu_system">System Overview</a> section.'
+        info: '系统中每一个 CPU 的详细信息。全部 CPU 的总量可以到 <a href="#menu_system">系统概述</a> 区段查看。'
     },
 
     'mem': {
-        title: 'Memory',
+        title: '内存',
         icon: '<i class="fas fa-microchip"></i>',
-        info: 'Detailed information about the memory management of the system.'
+        info: '系统内存管理的详细信息。'
     },
 
     'disk': {
-        title: 'Disks',
+        title: '磁盘',
         icon: '<i class="fas fa-hdd"></i>',
-        info: 'Charts with performance information for all the system disks. Special care has been given to present disk performance metrics in a way compatible with <code>iostat -x</code>. netdata by default prevents rendering performance charts for individual partitions and unmounted virtual disks. Disabled charts can still be enabled by configuring the relative settings in the netdata configuration file.'
+        info: '系统中所有磁盘效能信息图表。特别留意：这是以 <code>iostat -x</code> 所取得的效能数据做为呈现。在预设情况下，netdata 不会显示单一分割区与未挂载的虚拟磁盘效能图表。若仍想要显示，可以修改 netdata 设定档中的相关设定。'
     },
 
     'sensors': {
-        title: 'Sensors',
+        title: '温度传感器',
         icon: '<i class="fas fa-leaf"></i>',
-        info: 'Readings of the configured system sensors.'
+        info: '系统已配置相关温度传感器的读数'
     },
 
     'ipmi': {
@@ -146,76 +145,76 @@
     },
 
     'nfsd': {
-        title: 'NFS Server',
+        title: 'NFS服器器',
         icon: '<i class="fas fa-folder-open"></i>',
         info: 'Performance metrics of the Network File Server. NFS is a distributed file system protocol, allowing a user on a client computer to access files over a network, much like local storage is accessed. NFS, like many other protocols, builds on the Open Network Computing Remote Procedure Call (ONC RPC) system. The NFS is an open standard defined in Request for Comments (RFC).'
     },
 
     'nfs': {
-        title: 'NFS Client',
+        title: 'NFS客户端',
         icon: '<i class="fas fa-folder-open"></i>',
-        info: 'Performance metrics of the NFS operations of this system, acting as an NFS client.'
+        info: '显示本机做为 NFS 客户端的效能指标。'
     },
 
     'zfs': {
-        title: 'ZFS filesystem',
+        title: 'ZFS文件系统',
         icon: '<i class="fas fa-folder-open"></i>',
-        info: 'Performance metrics of the ZFS filesystem. The following charts visualize all metrics reported by <a href="https://github.com/zfsonlinux/zfs/blob/master/cmd/arcstat/arcstat" target="_blank">arcstat.py</a> and <a href="https://github.com/zfsonlinux/zfs/blob/master/cmd/arc_summary/arc_summary3" target="_blank">arc_summary.py</a>.'
+        info: 'ZFS档案系统的效能指标。以下图表呈现来自 <a href="https://github.com/zfsonlinux/zfs/blob/master/cmd/arcstat/arcstat.py" target="_blank">arcstat.py</a> 与 <a href="https://github.com/zfsonlinux/zfs/blob/master/cmd/arc_summary/arc_summary.py" target="_blank">arc_summary.py</a> 的效能数据。'
     },
 
     'btrfs': {
-        title: 'BTRFS filesystem',
+        title: 'BTRFS文件系统',
         icon: '<i class="fas fa-folder-open"></i>',
-        info: 'Disk space metrics for the BTRFS filesystem.'
+        info: 'BTRFS 档案系统磁盘空间使用指标。'
     },
 
     'apps': {
-        title: 'Applications',
+        title: '应用程序',
         icon: '<i class="fas fa-heartbeat"></i>',
         info: 'Per application statistics are collected using netdata\'s <code>apps.plugin</code>. This plugin walks through all processes and aggregates statistics for applications of interest, defined in <code>/etc/netdata/apps_groups.conf</code>, which can be edited by running <code>$ /etc/netdata/edit-config apps_groups.conf</code> (the default is <a href="https://github.com/netdata/netdata/blob/master/collectors/apps.plugin/apps_groups.conf" target="_blank">here</a>). The plugin internally builds a process tree (much like <code>ps fax</code> does), and groups processes together (evaluating both child and parent processes) so that the result is always a chart with a predefined set of dimensions (of course, only application groups found running are reported). The reported values are compatible with <code>top</code>, although the netdata plugin counts also the resources of exited children (unlike <code>top</code> which shows only the resources of the currently running processes). So for processes like shell scripts, the reported values include the resources used by the commands these scripts run within each timeframe.',
         height: 1.5
     },
 
     'users': {
-        title: 'Users',
+        title: '用户',
         icon: '<i class="fas fa-user"></i>',
         info: 'Per user statistics are collected using netdata\'s <code>apps.plugin</code>. This plugin walks through all processes and aggregates statistics per user. The reported values are compatible with <code>top</code>, although the netdata plugin counts also the resources of exited children (unlike <code>top</code> which shows only the resources of the currently running processes). So for processes like shell scripts, the reported values include the resources used by the commands these scripts run within each timeframe.',
         height: 1.5
     },
 
     'groups': {
-        title: 'User Groups',
+        title: '用户组',
         icon: '<i class="fas fa-users"></i>',
         info: 'Per user group statistics are collected using netdata\'s <code>apps.plugin</code>. This plugin walks through all processes and aggregates statistics per user group. The reported values are compatible with <code>top</code>, although the netdata plugin counts also the resources of exited children (unlike <code>top</code> which shows only the resources of the currently running processes). So for processes like shell scripts, the reported values include the resources used by the commands these scripts run within each timeframe.',
         height: 1.5
     },
 
     'netdata': {
-        title: 'Netdata Monitoring',
+        title: 'Netdata监视',
         icon: '<i class="fas fa-chart-bar"></i>',
-        info: 'Performance metrics for the operation of netdata itself and its plugins.'
+        info: 'netdata本身与外挂程式的效能数据。'
     },
 
     'aclk_test': {
-        title: 'ACLK Test Generator',
-        info: 'For internal use to perform integration testing.'
+        title: 'ACLK试验发报',
+        info: '用于内部执行集成测试。'
     },
 
     'example': {
-        title: 'Example Charts',
-        info: 'Example charts, demonstrating the external plugin architecture.'
+        title: '范例图表',
+        info: '范例图表，展示外挂程式的架构之用。'
     },
 
     'cgroup': {
         title: '',
         icon: '<i class="fas fa-th"></i>',
-        info: 'Container resource utilization metrics. Netdata reads this information from <b>cgroups</b> (abbreviated from <b>control groups</b>), a Linux kernel feature that limits and accounts resource usage (CPU, memory, disk I/O, network, etc.) of a collection of processes. <b>cgroups</b> together with <b>namespaces</b> (that offer isolation between processes) provide what we usually call: <b>containers</b>.'
+        info: '容器资源使用率指标。netdata 从 <b>cgroups</b> (<b>control groups</b> 的缩写) 中读取这些信息，cgroups 是 Linux 核心的一个功能，做限制与计算程序集中的资源使用率 (CPU、内存、磁盘 I/O、网络...等等)。<b>cgroups</b> 与 <b>namespaces</b> (程序之间的隔离) 结合提供了我们所说的：<b>容器</b>。'
     },
 
     'cgqemu': {
         title: '',
         icon: '<i class="fas fa-th-large"></i>',
-        info: 'QEMU virtual machine resource utilization metrics. QEMU (short for Quick Emulator) is a free and open-source hosted hypervisor that performs hardware virtualization.'
+        info: 'QEMU 虚拟机资源使用率效能指标。QEMU (Quick Emulator) 是自由与开源的虚拟机器平台，提供硬体虚拟化功能。'
     },
 
     'fping': {
@@ -606,32 +605,32 @@
 // information about the submenus
 netdataDashboard.submenu = {
     'web_log.squid_bandwidth': {
-        title: 'bandwidth',
+        title: '频宽',
         info: 'Bandwidth of responses (<code>sent</code>) by squid. This chart may present unusual spikes, since the bandwidth is accounted at the time the log line is saved by the server, even if the time needed to serve it spans across a longer duration. We suggest to use QoS (e.g. <a href="http://firehol.org/#fireqos" target="_blank">FireQOS</a>) for accurate accounting of the server bandwidth.'
     },
 
     'web_log.squid_responses': {
-        title: 'responses',
+        title: '回应',
         info: 'Information related to the responses sent by squid.'
     },
 
     'web_log.squid_requests': {
-        title: 'requests',
+        title: '请求',
         info: 'Information related to the requests squid has received.'
     },
 
     'web_log.squid_hierarchy': {
-        title: 'hierarchy',
+        title: '等级制度',
         info: 'Performance metrics for the squid hierarchy used to serve the requests.'
     },
 
     'web_log.squid_squid_transport': {
-        title: 'transport'
+        title: '运输'
     },
 
     'web_log.squid_squid_cache': {
-        title: 'cache',
-        info: 'Performance metrics for the performance of the squid cache.'
+        title: '缓存',
+        info: 'squid缓存性能的性能指标.'
     },
 
     'web_log.squid_timings': {
@@ -661,7 +660,7 @@
 
     'mem.ksm': {
         title: 'deduper (ksm)',
-        info: 'Kernel Same-page Merging (KSM) performance monitoring, read from several files in <code>/sys/kernel/mm/ksm/</code>. KSM is a memory-saving de-duplication feature in the Linux kernel (since version 2.6.32). The KSM daemon ksmd periodically scans those areas of user memory which have been registered with it, looking for pages of identical content which can be replaced by a single write-protected page (which is automatically copied if a process later wants to update its content). KSM was originally developed for use with KVM (where it was known as Kernel Shared Memory), to fit more virtual machines into physical memory, by sharing the data common between them.  But it can be useful to any application which generates many instances of the same data.'
+        info: 'Kernel Same-page Merging (KSM) 效能监视，经由读取 <code>/sys/kernel/mm/ksm/</code> 下的档案而来。KSM 是在 Linux 核心 (自 2.6.32 版起) 内含的一种节省内存使用率重复资料删除功能。)。 KSM 服务程序 ksmd 会定期扫描内存区域，寻找正有资料要更新进来且相同资料存在的分页。KSM 最初是从 KVM 专案开发中而来，利用这种共用相同资料的机制，即可以让更多的虚拟机器放到内存中。另外，对许多会产生同样内容的应用程序来说，这个功能是相当有效益的。'
     },
 
     'mem.hugepages': {
@@ -669,7 +668,7 @@
     },
 
     'mem.numa': {
-        info: 'Non-Uniform Memory Access (NUMA) is a hierarchical memory design the memory access time is dependent on locality. Under NUMA, a processor can access its own local memory faster than non-local memory (memory local to another processor or memory shared between processors). The individual metrics are described in the <a href="https://www.kernel.org/doc/Documentation/numastat.txt" target="_blank">Linux kernel documentation</a>.'
+        info: 'Non-Uniform Memory Access (NUMA) 是一种内存存取分隔设计，在 NUMA 之下，一个处理器存取自己管理的的内存，将比非自己管理的内存 (另一个处理器所管理的内存或是共用内存) 具有更快速的效能。在 <a href="https://www.kernel.org/doc/Documentation/numastat.txt" target="_blank">Linux 核心文件</a> 中有详细说明这些指标。'
     },
 
     'ip.ecn': {
@@ -678,7 +677,7 @@
 
     'netfilter.conntrack': {
         title: 'connection tracker',
-        info: 'Netfilter Connection Tracker performance metrics. The connection tracker keeps track of all connections of the machine, inbound and outbound. It works by keeping a database with all open connections, tracking network and address translation and connection expectations.'
+        info: 'Netfilter connection tracker 效能指标。Connection tracker 会追踪这台主机上所有的连接，包括流入与流出。工作原理是将所有开启的连接都储存到资料库，以追踪网络、位址转换与连接目标。'
     },
 
     'netfilter.nfacct': {
@@ -700,9 +699,9 @@
         title: 'softnet',
         info: function (os) {
             if (os === 'linux')
-                return 'Statistics for CPUs SoftIRQs related to network receive work. Break down per CPU core can be found at <a href="#menu_cpu_submenu_softnet_stat">CPU / softnet statistics</a>. <b>processed</b> states the number of packets processed, <b>dropped</b> is the number packets dropped because the network device backlog was full (to fix them on Linux use <code>sysctl</code> to increase <code>net.core.netdev_max_backlog</code>), <b>squeezed</b> is the number of packets dropped because the network device budget ran out (to fix them on Linux use <code>sysctl</code> to increase <code>net.core.netdev_budget</code> and/or <code>net.core.netdev_budget_usecs</code>). More information about identifying and troubleshooting network driver related issues can be found at <a href="https://access.redhat.com/sites/default/files/attachments/20150325_network_performance_tuning.pdf" target="_blank">Red Hat Enterprise Linux Network Performance Tuning Guide</a>.';
+                return '与网络接收工作相关的 CPU SoftIRQ 的统计信息。 可以在 <a href="#menu_cpu_submenu_softnet_stat">CPU/softnet 统计数据</a> 中找到每个 CPU 内核的细分。 <b>processed</b> 表示处理的数据包数量，<b>dropped</b> 是由于网络设备积压已满而丢弃的数据包数量（在 Linux 上修复它们使用 <code>sysctl</code> 要增加 <code>net.core.netdev_max_backlog</code>)，<b>squeezed</b> 是由于网络设备预算耗尽而丢弃的数据包数量（在 Linux 上修复它们使用 <code>sysctl</ code> 以增加 <code>net.core.netdev_budget</code> 和/或 <code>net.core.netdev_budget_usecs</code>）。 有关识别和排除网络驱动程序相关问题的更多信息，请访问 <a href="https://access.redhat.com/sites/default/files/attachments/20150325_network_performance_tuning.pdf" target="_blank">Red Hat Enterprise Linux 网络性能调优指南</a>。';
             else
-                return 'Statistics for CPUs SoftIRQs related to network receive work.';
+                return '与网络接收工作相关的 CPU SoftIRQ 的统计信息。';
         }
     },
 
@@ -710,25 +709,25 @@
         title: 'softnet',
         info: function (os) {
             if (os === 'linux')
-                return 'Statistics for per CPUs core SoftIRQs related to network receive work. Total for all CPU cores can be found at <a href="#menu_system_submenu_softnet_stat">System / softnet statistics</a>. <b>processed</b> states the number of packets processed, <b>dropped</b> is the number packets dropped because the network device backlog was full (to fix them on Linux use <code>sysctl</code> to increase <code>net.core.netdev_max_backlog</code>), <b>squeezed</b> is the number of packets dropped because the network device budget ran out (to fix them on Linux use <code>sysctl</code> to increase <code>net.core.netdev_budget</code> and/or <code>net.core.netdev_budget_usecs</code>). More information about identifying and troubleshooting network driver related issues can be found at <a href="https://access.redhat.com/sites/default/files/attachments/20150325_network_performance_tuning.pdf" target="_blank">Red Hat Enterprise Linux Network Performance Tuning Guide</a>.';
+                return '与网络接收工作相关的每个 CPU 核心 SoftIRQ 的统计信息。所有 CPU 内核的总数可以在<a href="#menu_system_submenu_softnet_stat">系统/软网统计</a>中找到。<b>processed</b> 表示处理的数据包数量，<b>dropped</b> 是由于网络设备积压已满而丢弃的数据包数量（在 Linux 上修复它们使用 <code>sysctl</code> 要增加 <code>net.core.netdev_max_backlog</code>)，<b>squeezed</b> 是由于网络设备预算耗尽而丢弃的数据包数量（在 Linux 上修复它们使用 <code>sysctl</ code> 以增加 <code>net.core.netdev_budget</code> 和/或 <code>net.core.netdev_budget_usecs</code>）。 有关识别和排除网络驱动程序相关问题的更多信息，请访问 <a href="https://access.redhat.com/sites/default/files/attachments/20150325_network_performance_tuning.pdf" target="_blank">Red Hat Enterprise Linux 网络性能调优指南</a>。';
             else
-                return 'Statistics for per CPUs core SoftIRQs related to network receive work. Total for all CPU cores can be found at <a href="#menu_system_submenu_softnet_stat">System / softnet statistics</a>.';
+                return '与网络接收工作相关的每个 CPU 核心 SoftIRQ 的统计信息。所有 CPU 内核的总数可以在<a href="#menu_system_submenu_softnet_stat">系统/软网统计</a>中找到。';
         }
     },
 
     'go_expvar.memstats': {
         title: 'memory statistics',
-        info: 'Go runtime memory statistics. See <a href="https://golang.org/pkg/runtime/#MemStats" target="_blank">runtime.MemStats</a> documentation for more info about each chart and the values.'
+        info: 'Go 运行时内存统计。有关每个图表和值的更多信息，请参阅 <a href="https://golang.org/pkg/runtime/#MemStats" target="_blank">runtime.MemStats</a> 文档。'
     },
 
     'couchdb.dbactivity': {
         title: 'db activity',
-        info: 'Overall database reads and writes for the entire server. This includes any external HTTP traffic, as well as internal replication traffic performed in a cluster to ensure node consistency.'
+        info: '整个服务器的整体数据库读写。这包括任何外部 HTTP 流量，以及在集群中执行的内部复制流量，以确保节点一致性。'
     },
 
     'couchdb.httptraffic': {
         title: 'http traffic breakdown',
-        info: 'All HTTP traffic, broken down by type of request (<tt>GET</tt>, <tt>PUT</tt>, <tt>POST</tt>, etc.) and response status code (<tt>200</tt>, <tt>201</tt>, <tt>4xx</tt>, etc.)<br/><br/>Any <tt>5xx</tt> errors here indicate a likely CouchDB bug; check the logfile for further information.'
+        info: '所有 HTTP 流量，按请求类型（<tt>GET</tt>、<tt>PUT</tt>、<tt>POST</tt> 等）和响应状态代码（<tt>200 </tt>、<tt>201</tt>、<tt>4xx</tt> 等）<br/><br/>此处的任何 <tt>5xx</tt> 错误都表示可能存在 CouchDB 错误 ; 检查日志文件以获取更多信息。'
     },
 
     'couchdb.ops': {
@@ -737,22 +736,22 @@
 
     'couchdb.perdbstats': {
         title: 'per db statistics',
-        info: 'Statistics per database. This includes <a href="http://docs.couchdb.org/en/latest/api/database/common.html#get--db">3 size graphs per database</a>: active (the size of live data in the database), external (the uncompressed size of the database contents), and file (the size of the file on disk, exclusive of any views and indexes). It also includes the number of documents and number of deleted documents per database.'
+        info: '每个数据库的统计信息。 这包括<a href="http://docs.couchdb.org/en/latest/api/database/common.html#get--db">每个数据库的 3 个大小图</a>：活动（ 数据库中的实时数据）、外部（数据库内容的未压缩大小）和文件（磁盘上文件的大小，不包括任何视图和索引）。它还包括每个数据库的文档数和已删除文档数。'
     },
 
     'couchdb.erlang': {
         title: 'erlang statistics',
-        info: 'Detailed information about the status of the Erlang VM that hosts CouchDB. These are intended for advanced users only. High values of the peak message queue (>10e6) generally indicate an overload condition.'
+        info: '有关托管 CouchDB 的 Erlang VM 状态的详细信息。这些仅适用于高级用户。峰值消息队列 (>10e6) 的高值通常表示过载情况。'
     },
 
     'ntpd.system': {
         title: 'system',
-        info: 'Statistics of the system variables as shown by the readlist billboard <code>ntpq -c rl</code>. System variables are assigned an association ID of zero and can also be shown in the readvar billboard <code>ntpq -c "rv 0"</code>. These variables are used in the <a href="http://doc.ntp.org/current-stable/discipline.html">Clock Discipline Algorithm</a>, to calculate the lowest and most stable offset.'
+        info: 'readlist公告牌<code>ntpq -c rl</code>显示的系统变量的统计信息。系统变量分配的关联 ID 为零，也可以显示在 readvar 广告牌 <code>ntpq -c "rv 0"</code> 中。<a href="http://doc.ntp.org/current-stable/discipline.html">时钟规则算法</a>中使用这些变量来计算最低和最稳定的偏移量。'
     },
 
     'ntpd.peers': {
         title: 'peers',
-        info: 'Statistics of the peer variables for each peer configured in <code>/etc/ntp.conf</code> as shown by the readvar billboard <code>ntpq -c "rv &lt;association&gt;"</code>, while each peer is assigned a nonzero association ID as shown by <code>ntpq -c "apeers"</code>. The module periodically scans for new/changed peers (default: every 60s). <b>ntpd</b> selects the best possible peer from the available peers to synchronize the clock. A minimum of at least 3 peers is required to properly identify the best possible peer.'
+        info: '<code>/etc/ntp.conf</code> 中配置的每个 peer 的 peer 变量的统计信息，如 readvar billboard <code>ntpq -c "rv <association>"</code> 所示，而每个 peer 被分配了一个非零关联 ID，如 <code>ntpq -c "apeers"</code> 所示。 该模块定期扫描新的/更改的对等点（默认值：每 60 秒）。<b>ntpd</b> 从可用对等点中选择最佳对等点来同步时钟。至少需要至少 3 个对等点才能正确识别可能的最佳对等点。'
     }
 };
 
@@ -776,16 +775,16 @@
 netdataDashboard.context = {
     'system.cpu': {
         info: function (os) {
-            void (os);
-            return 'Total CPU utilization (all cores). 100% here means there is no CPU idle time at all. You can get per core usage at the <a href="#menu_cpu">CPUs</a> section and per application usage at the <a href="#menu_apps">Applications Monitoring</a> section.'
-                + netdataDashboard.sparkline('<br/>Keep an eye on <b>iowait</b> ', 'system.cpu', 'iowait', '%', '. If it is constantly high, your disks are a bottleneck and they slow your system down.')
-                + netdataDashboard.sparkline('<br/>An important metric worth monitoring, is <b>softirq</b> ', 'system.cpu', 'softirq', '%', '. A constantly high percentage of softirq may indicate network driver issues.');
+            void(os);
+            return 'CPU 使用率总表 (全部核心)。 当数值为 100% 时，表示您的 CPU 非常忙碌没有闲置空间。您可以在 <a href="#menu_cpu">CPU</a> 区段及以及 <a href="#menu_apps">应用程序</a> 区段深入了解每个核心与应用程序的使用情况。'
+                + netdataDashboard.sparkline('<br/>请特别关注 <b>iowait</b> ','system.cpu','iowait','%', '，如果它一直处于较高的情况，这表示您的磁盘是效能瓶颈，您的系统效能会明显降低。')
+                + netdataDashboard.sparkline('<br/>另一个重要的指标是 <b>softirq</b> ','system.cpu','softirq','%', '，若这个数值持续在较高的情况，很有可能是您的网络驱动部份有问题。');
         },
         valueRange: "[0, 100]"
     },
 
     'system.load': {
-        info: 'Current system load, i.e. the number of processes using CPU or waiting for system resources (usually CPU and disk). The 3 metrics refer to 1, 5 and 15 minute averages. The system calculates this once every 5 seconds. For more information check <a href="https://en.wikipedia.org/wiki/Load_(computing)" target="_blank">this wikipedia article</a>.',
+        info: '目前系统负载，也就是指 CPU 使用情况或正在等待系统资源 (通常是 CPU 与磁盘)。这三个指标分别是 1、5、15 分钟。系统每 5 秒会计算一次。更多的信息可以参阅 <a href="https://en.wikipedia.org/wiki/Load_(computing)" target="_blank">维基百科</a> 说明。',
         height: 0.7
     },
 
@@ -816,95 +815,95 @@
 
     'system.io': {
         info: function (os) {
-            var s = 'Total Disk I/O, for all physical disks. You can get detailed information about each disk at the <a href="#menu_disk">Disks</a> section and per application Disk usage at the <a href="#menu_apps">Applications Monitoring</a> section.';
+            var s = '磁盘 I/O 总计, 包含所有的实体磁盘。您可以在 <a href="#menu_disk">磁盘</a> 区段查看每一个磁盘的详细信息，也可以在 <a href="#menu_apps">应用程序</a> 区段了解每一支应用程序对于磁盘的使用情况。';
 
             if (os === 'linux')
-                return s + ' Physical are all the disks that are listed in <code>/sys/block</code>, but do not exist in <code>/sys/devices/virtual/block</code>.';
+                return s + ' 实体磁盘指的是 <code>/sys/block</code> 中有列出，但是没有在 <code>/sys/devices/virtual/block</code> 的所有磁盘。';
             else
                 return s;
         }
     },
 
     'system.pgpgio': {
-        info: 'Memory paged from/to disk. This is usually the total disk I/O of the system.'
+        info: '从内存分页到磁盘的 I/O。通常是这个系统所有磁盘的总 I/O。'
     },
 
     'system.swapio': {
-        info: 'Total Swap I/O. (netdata measures both <code>in</code> and <code>out</code>. If either of the metrics <code>in</code> or <code>out</code> is not shown in the chart, the reason is that the metric is zero. - you can change the page settings to always render all the available dimensions on all charts).'
+        info: '所有的 Swap I/O. (netdata 会合并显示 <code>输入</code> 与 <code>输出</code>。如果图表中没有任何数值，则表示为 0。 - 您可以修改这一页的设定，让图表显示固定的维度。'
     },
 
     'system.pgfaults': {
-        info: 'Total page faults. <b>Major page faults</b> indicates that the system is using its swap. You can find which applications use the swap at the <a href="#menu_apps">Applications Monitoring</a> section.'
+        info: '所有的 Page 错误. <b>Major page faults</b> indicates that the system is using its swap. You can find which applications use the swap at the <a href="#menu_apps">Applications Monitoring</a> section.'
     },
 
     'system.entropy': {
         colors: '#CC22AA',
-        info: '<a href="https://en.wikipedia.org/wiki/Entropy_(computing)" target="_blank">Entropy</a>, is a pool of random numbers (<a href="https://en.wikipedia.org/wiki//dev/random" target="_blank">/dev/random</a>) that is mainly used in cryptography. If the pool of entropy gets empty, processes requiring random numbers may run a lot slower (it depends on the interface each program uses), waiting for the pool to be replenished. Ideally a system with high entropy demands should have a hardware device for that purpose (TPM is one such device). There are also several software-only options you may install, like <code>haveged</code>, although these are generally useful only in servers.'
+        info: '<a href="https://en.wikipedia.org/wiki/Entropy_(computing)" target="_blank">熵 (Entropy)</a>，主要是用在密码学的乱数集区 (<a href="https://en.wikipedia.org/wiki//dev/random" target="_blank">/dev/random</a>)。如果熵的集区为空，需要乱数的程序可能会导致执行变慢 (这取决于每个程序使用的界面)，等待集区补充。在理想情况下，有高度熵需求的系统应该要具备专用的硬体装置 (例如 TPM 装置)。您也可以安装纯软体的方案，例如 <code>haveged</code>，通常这些方案只会使用在伺服器上。'
     },
 
     'system.forks': {
         colors: '#5555DD',
-        info: 'Number of new processes created.'
+        info: '建立新程序的数量。'
     },
 
     'system.intr': {
         colors: '#DD5555',
-        info: 'Total number of CPU interrupts. Check <code>system.interrupts</code> that gives more detail about each interrupt and also the <a href="#menu_cpu">CPUs</a> section where interrupts are analyzed per CPU core.'
+        info: 'CPU 中断的总数。透过检查 <code>system.interrupts</code>，得知每一个中断的细节信息。在 <a href="#menu_cpu">CPU</a> 区段提供每一个 CPU 核心的中断情形。'
     },
 
     'system.interrupts': {
-        info: 'CPU interrupts in detail. At the <a href="#menu_cpu">CPUs</a> section, interrupts are analyzed per CPU core.'
+        info: 'CPU 中断的细节。在 <a href="#menu_cpu">CPU</a> 区段中，依据每个 CPU 核心分析中断。'
     },
 
     'system.softirqs': {
-        info: 'CPU softirqs in detail. At the <a href="#menu_cpu">CPUs</a> section, softirqs are analyzed per CPU core.'
+        info: 'CPU 中断的细节。在 <a href="#menu_cpu">CPU</a> 区段中，依据每个 CPU 核心分析中断。'
     },
 
     'system.processes': {
-        info: 'System processes. <b>Running</b> are the processes in the CPU. <b>Blocked</b> are processes that are willing to enter the CPU, but they cannot, e.g. because they wait for disk activity.'
+        info: '系统程序。<b>running</b> 显示正在 CPU 中的程序。<b>Blocked</b> 显示目前被挡下无法进入 CPU 执行的程序，例如：正在等待磁盘完成动作，才能继续。'
     },
 
     'system.active_processes': {
-        info: 'All system processes.'
+        info: '所有的系统程序。'
     },
 
     'system.ctxt': {
-        info: '<a href="https://en.wikipedia.org/wiki/Context_switch" target="_blank">Context Switches</a>, is the switching of the CPU from one process, task or thread to another. If there are many processes or threads willing to execute and very few CPU cores available to handle them, the system is making more context switching to balance the CPU resources among them. The whole process is computationally intensive. The more the context switches, the slower the system gets.'
+        info: '<a href="https://en.wikipedia.org/wiki/Context_switch" target="_blank">Context Switches</a>，指 CPU 从一个程序、工作或是执行绪切换到另一个程序、工作或是执行绪。如果有许多程序或执行绪需要执行，但可以使用的 CPU 核心很少，即表示系统将会进行更多的 context switching 用来平衡它们所使用的 CPU 资源。这个过程需要大量的运算，因此 context switches 越多，整个系统就会越慢。'
     },
 
     'system.idlejitter': {
-        info: 'Idle jitter is calculated by netdata. A thread is spawned that requests to sleep for a few microseconds. When the system wakes it up, it measures how many microseconds have passed. The difference between the requested and the actual duration of the sleep, is the <b>idle jitter</b>. This number is useful in real-time environments, where CPU jitter can affect the quality of the service (like VoIP media gateways).'
+        info: 'Idle jitter 是由 netdata 计算而得。当一个执行绪要求睡眠 (Sleep) 时，需要几个微秒的时间。当系统要唤醒它时，会量测它用了多少个微秒的时间。要求睡眠与实际睡眠时间的差异就是 <b>idle jitter</b>。这个数字在即时的环境中非常有用，因为 CPU jitter 将会影响服务的品质 (例如 VoIP media gateways)。'
     },
 
     'system.net': {
         info: function (os) {
-            var s = 'Total bandwidth of all physical network interfaces. This does not include <code>lo</code>, VPNs, network bridges, IFB devices, bond interfaces, etc. Only the bandwidth of physical network interfaces is aggregated.';
+            var s = '所有实体网络界面的总频宽。不包含 <code>lo</code>、VPN、网络桥接、IFB 装置、界面聚合 (Bond).. 等。将合并显示实体网络界面的频宽使用情况。';
 
             if (os === 'linux')
-                return s + ' Physical are all the network interfaces that are listed in <code>/proc/net/dev</code>, but do not exist in <code>/sys/devices/virtual/net</code>.';
+                return s + ' 实体网络界面是指在 <code>/proc/net/dev</code> 有列出，但不在 <code>/sys/devices/virtual/net</code> 里。';
             else
                 return s;
         }
     },
 
     'system.ip': {
-        info: 'Total IP traffic in the system.'
+        info: 'IP 总流量。'
     },
 
     'system.ipv4': {
-        info: 'Total IPv4 Traffic.'
+        info: 'IPv4 总流量。'
     },
 
     'system.ipv6': {
-        info: 'Total IPv6 Traffic.'
+        info: 'IPv6 总流量。'
     },
 
     'system.ram': {
-        info: 'System Random Access Memory (i.e. physical memory) usage.'
+        info: '系统随机存取内存 (也就是实体内存) 使用情况。'
     },
 
     'system.swap': {
-        info: 'System swap memory usage. Swap space is used when the amount of physical memory (RAM) is full. When the system needs more memory resources and the RAM is full, inactive pages in memory are moved to the swap space (usually a disk, a disk partition or a file).'
+        info: '系统交换空间 (Swap) 内存使用情况。Swap 空间会在实体内存 (RAM) 已满的情况下使用。当系统内存已满但还需要使用更多内存情况下，系统内存中的比较没有异动的 Page 将会被移动到 Swap 空间 (通常是磁盘、磁盘分割区或是档案)。'
     },
 
     // ------------------------------------------------------------------------
@@ -986,28 +985,28 @@
 
 
     'mem.pgfaults': {
-        info: 'A <a href="https://en.wikipedia.org/wiki/Page_fault" target="_blank">page fault</a> is a type of interrupt, called trap, raised by computer hardware when a running program accesses a memory page that is mapped into the virtual address space, but not actually loaded into main memory. If the page is loaded in memory at the time the fault is generated, but is not marked in the memory management unit as being loaded in memory, then it is called a <b>minor</b> or soft page fault. A <b>major</b> page fault is generated when the system needs to load the memory page from disk or swap memory.'
+        info: '<a href="https://en.wikipedia.org/wiki/Page_fault" target="_blank">页面错误</a>是一种中断，称为陷阱，由计算机硬件在 正在运行的程序访问映射到虚拟地址空间的内存页面，但实际上并未加载到主内存中。 如果该页在故障发生时已加载到内存中，但在内存管理单元中未标记为正在加载到内存中，则称为<b>轻微</b>或软页错误。 当系统需要从磁盘或交换内存加载内存页面时，会生成<b>主要</b>页面错误。'
     },
 
     'mem.committed': {
         colors: NETDATA.colors[3],
-        info: 'Committed Memory, is the sum of all memory which has been allocated by processes.'
+        info: 'Committed 内存，是指程序分配到的所有内存总计。'
     },
 
     'mem.available': {
-        info: 'Available Memory is estimated by the kernel, as the amount of RAM that can be used by userspace processes, without causing swapping.'
+        info: '可用内存是由核心估算而来，也就是使用者空间程序可以使用的 RAM 总量，而不会造成交换 (Swap) 发生。'
     },
 
     'mem.writeback': {
-        info: '<b>Dirty</b> is the amount of memory waiting to be written to disk. <b>Writeback</b> is how much memory is actively being written to disk.'
+        info: '<b>Dirty</b> 是等待写入磁盘的内存量。<b>Writeback</b> 是指有多少内存内容被主动写入磁盘。'
     },
 
     'mem.kernel': {
-        info: 'The total amount of memory being used by the kernel. <b>Slab</b> is the amount of memory used by the kernel to cache data structures for its own use. <b>KernelStack</b> is the amount of memory allocated for each task done by the kernel. <b>PageTables</b> is the amount of memory dedicated to the lowest level of page tables (A page table is used to turn a virtual address into a physical memory address). <b>VmallocUsed</b> is the amount of memory being used as virtual address space.'
+        info: '内核使用的内存总量。 <b>Slab</b> 是内核用于缓存数据结构供其自己使用的内存量。 <b>KernelStack</b> 是为内核完成的每个任务分配的内存量。 <b>PageTables</b> 是分配给最低级别页表的内存量（页表用于将虚拟地址转换为物理内存地址）。 <b>VmallocUsed</b> 是用作虚拟地址空间的内存量。'
     },
 
     'mem.slab': {
-        info: '<b>Reclaimable</b> is the amount of memory which the kernel can reuse. <b>Unreclaimable</b> can not be reused even when the kernel is lacking memory.'
+        info: '<b>Reclaimable</b> 是内核可以重用的内存量。 <b>Unreclaimable</b> 即使在内核内存不足的情况下也不能被重用。'
     },
 
     'mem.hugepages': {
@@ -1054,19 +1053,19 @@
     // network interfaces
 
     'net.drops': {
-        info: 'Packets that have been dropped at the network interface level. These are the same counters reported by <code>ifconfig</code> as <code>RX dropped</code> (inbound) and <code>TX dropped</code> (outbound). <b>inbound</b> packets can be dropped at the network interface level due to <a href="#menu_system_submenu_softnet_stat">softnet backlog</a> overflow, bad / unintented VLAN tags, unknown or unregistered protocols, IPv6 frames when the server is not configured for IPv6. Check <a href="https://www.novell.com/support/kb/doc.php?id=7007165" target="_blank">this document</a> for more information.'
+        info: '在网络接口级别丢弃的数据包。 这些是 <code>ifconfig</code> 报告的与 <code>RX 掉线</code>（入站）和 <code>TX 掉线</code>（出站）相同的计数器。 由于<a href="#menu_system_submenu_softnet_stat">softnet 积压</a>溢出、错误/无意的 VLAN 标记、未知或未注册的协议、IPv6 帧，<b>入站</b> 数据包可能会在网络接口级别被丢弃 服务器未配置为 IPv6。 查看<a href="https://www.novell.com/support/kb/doc.php?id=7007165" target="_blank">本文档</a>了解更多信息。'
     },
 
     'net.duplex': {
-        info: 'State map: 0 - unknown, 1 - half duplex, 2 - full duplex'
+        info: '状态图：0 - 未知，1 - 半双工，2 - 全双工'
     },
 
     'net.operstate': {
-        info: 'State map: 0 - unknown, 1 - notpresent, 2 - down, 3 - lowerlayerdown, 4 - testing, 5 - dormant, 6 - up'
+        info: '状态图：0 - 未知，1 - 不存在，2 - 向下，3 - 下层向下，4 - 测试，5 - 休眠，6 - 向上'
     },
 
     'net.carrier': {
-        info: 'State map: 0 - down, 1 - up'
+        info: '状态图：0 - 向下，1 - 向上'
     },
 
     // ------------------------------------------------------------------------
@@ -1331,7 +1330,7 @@
                     } catch (e) {
                         iface = '';
                     }
-                    return netdataDashboard.gaugeChart('Received' + iface, '12%', 'received');
+                    return netdataDashboard.gaugeChart('接受' + iface, '15%', 'received');
                 } else
                     return '';
             },
@@ -1344,7 +1343,7 @@
                     } catch (e) {
                         iface = '';
                     }
-                    return netdataDashboard.gaugeChart('Sent' + iface, '12%', 'sent');
+                    return netdataDashboard.gaugeChart('发送' + iface, '15%', 'sent');
                 } else
                     return '';
             }
@@ -1353,14 +1352,14 @@
             function (os, id) {
                 void (os);
                 if (!id.match(/^cgroup_.*/))
-                    return netdataDashboard.gaugeChart('Received', '12%', 'received');
+                    return netdataDashboard.gaugeChart('接受', '15%', 'received');
                 else
                     return '';
             },
             function (os, id) {
                 void (os);
                 if (!id.match(/^cgroup_.*/))
-                    return netdataDashboard.gaugeChart('Sent', '12%', 'sent');
+                    return netdataDashboard.gaugeChart('发送', '15%', 'sent');
                 else
                     return '';
             }
@@ -1373,13 +1372,13 @@
     'netfilter.sockets': {
         colors: '#88AA00',
         heads: [
-            netdataDashboard.gaugeChart('Active Connections', '12%', '', '#88AA00')
+            netdataDashboard.gaugeChart('活动连接', '12%', '', '#88AA00')
         ]
     },
 
     'netfilter.new': {
         heads: [
-            netdataDashboard.gaugeChart('New Connections', '12%', 'new', '#5555AA')
+            netdataDashboard.gaugeChart('新连接', '12%', 'new', '#5555AA')
         ]
     },
 
@@ -1389,67 +1388,67 @@
     'disk.util': {
         colors: '#FF5588',
         heads: [
-            netdataDashboard.gaugeChart('Utilization', '12%', '', '#FF5588')
+            netdataDashboard.gaugeChart('使用率', '18%', '', '#FF5588')
         ],
-        info: 'Disk Utilization measures the amount of time the disk was busy with something. This is not related to its performance. 100% means that the system always had an outstanding operation on the disk. Keep in mind that depending on the underlying technology of the disk, 100% here may or may not be an indication of congestion.'
+        info: '磁盘利用率衡量磁盘忙于某事的时间。 这与其性能无关。 100% 表示系统始终在磁盘上有未完成的操作。 请记住，根据磁盘的底层技术，这里的 100% 可能是也可能不是拥塞的指示。'
     },
 
     'disk.busy': {
         colors: '#FF5588',
-        info: 'Disk Busy Time measures the amount of time the disk was busy with something.'
+        info: '磁盘忙时间测量磁盘忙于某事的时间。'
     },
     
     'disk.backlog': {
         colors: '#0099CC',
-        info: 'Backlog is an indication of the duration of pending disk operations. On every I/O event the system is multiplying the time spent doing I/O since the last update of this field with the number of pending operations. While not accurate, this metric can provide an indication of the expected completion time of the operations in progress.'
+        info: '积压表示挂起的磁盘操作的持续时间。 在每个 I/O 事件中，系统将自上次更新此字段以来花费在 I/O 上的时间乘以挂起操作的数量。 虽然不准确，但该指标可以提供正在进行的操作的预期完成时间的指示。'
     },
 
     'disk.io': {
         heads: [
-            netdataDashboard.gaugeChart('Read', '12%', 'reads'),
-            netdataDashboard.gaugeChart('Write', '12%', 'writes')
+            netdataDashboard.gaugeChart('读取', '18%', 'reads'),
+            netdataDashboard.gaugeChart('写入', '18%', 'writes')
         ],
-        info: 'Amount of data transferred to and from disk.'
+        info: '磁盘传输信息的总计。'
     },
 
     'disk.ops': {
-        info: 'Completed disk I/O operations. Keep in mind the number of operations requested might be higher, since the system is able to merge adjacent to each other (see merged operations chart).'
+        info: '已完成的磁盘 I/O operations。提醒：实际上的 operations 数量可能更高，因为系统能够将它们互相合并 (详见 operations 图表)。'
     },
 
     'disk.qops': {
-        info: 'I/O operations currently in progress. This metric is a snapshot - it is not an average over the last interval.'
+        info: '当前正在进行 I/O 操作。 这个指标是一个快照—,它不是上一个时间间隔的平均值。'
     },
 
     'disk.iotime': {
         height: 0.5,
-        info: 'The sum of the duration of all completed I/O operations. This number can exceed the interval if the disk is able to execute I/O operations in parallel.'
+        info: '所有已完成 I/O 操作的持续时间总和。 如果磁盘能够并行执行 I/O 操作，则此数字可能会超过间隔。'
     },
     'disk.mops': {
         height: 0.5,
-        info: 'The number of merged disk operations. The system is able to merge adjacent I/O operations, for example two 4KB reads can become one 8KB read before given to disk.'
+        info: '合并的磁盘操作数。 系统能够合并相邻的 I/O 操作，例如两个 4KB 读取可以在分配给磁盘之前变成一个 8KB 读取。'
     },
     'disk.svctm': {
         height: 0.5,
-        info: 'The average service time for completed I/O operations. This metric is calculated using the total busy time of the disk and the number of completed operations. If the disk is able to execute multiple parallel operations the reporting average service time will be misleading.'
+        info: '已完成 I/O 操作的平均服务时间。 该指标是使用磁盘的总忙碌时间和已完成操作的数量来计算的。 如果磁盘能够执行多个并行操作，则报告平均服务时间将具有误导性。'
     },
     'disk.avgsz': {
         height: 0.5,
-        info: 'The average I/O operation size.'
+        info: 'I/O operation 平均大小。'
     },
     'disk.await': {
         height: 0.5,
-        info: 'The average time for I/O requests issued to the device to be served. This includes the time spent by the requests in queue and the time spent servicing them.'
+        info: '对要提供服务的设备发出 I/O 请求平均时间。这包含了请求在伫列中所花费的时间以及实际提供服务的时间。'
     },
 
     'disk.space': {
-        info: 'Disk space utilization. reserved for root is automatically reserved by the system to prevent the root user from getting out of space.'
+        info: '磁盘空间使用率。系统会自动为 root 使用者做保留，以防止 root 使用者使用过多。'
     },
     'disk.inodes': {
-        info: 'inodes (or index nodes) are filesystem objects (e.g. files and directories). On many types of file system implementations, the maximum number of inodes is fixed at filesystem creation, limiting the maximum number of files the filesystem can hold. It is possible for a device to run out of inodes. When this happens, new files cannot be created on the device, even though there may be free space available.'
+        info: 'inode（或索引节点）是文件系统对象（例如文件和目录）。 在许多类型的文件系统实现中，inode 的最大数量在文件系统创建时是固定的，限制了文件系统可以容纳的最大文件数量。 设备可能会耗尽 inode。 发生这种情况时，即使可能有可用空间，也无法在设备上创建新文件。'
     },
 
     'mysql.net': {
-        info: 'The amount of data sent to mysql clients (<strong>out</strong>) and received from mysql clients (<strong>in</strong>).'
+        info: '发送到 mysql 客户端 (<strong>out</strong>) 和从 mysql 客户端接收的数据量 (<strong>in</strong>)。'
     },
 
     // ------------------------------------------------------------------------
@@ -1757,7 +1756,7 @@
     // NETDATA
 
     'netdata.response_time': {
-        info: 'The netdata API response time measures the time netdata needed to serve requests. This time includes everything, from the reception of the first byte of a request, to the dispatch of the last byte of its reply, therefore it includes all network latencies involved (i.e. a client over a slow network will influence these metrics).'
+        info: 'netdata API 响应时间测量为请求提供服务所需的时间 netdata。 这个时间包括一切，从请求的第一个字节的接收，到其回复的最后一个字节的分派，因此它包括所有涉及的网络延迟（即慢速网络上的客户端将影响这些指标）。'
     },
 
     // ------------------------------------------------------------------------
@@ -1766,8 +1765,8 @@
     'retroshare.bandwidth': {
         info: 'RetroShare inbound and outbound traffic.',
         mainheads: [
-            netdataDashboard.gaugeChart('Received', '12%', 'bandwidth_down_kb'),
-            netdataDashboard.gaugeChart('Sent', '12%', 'bandwidth_up_kb')
+            netdataDashboard.gaugeChart('接受', '12%', 'bandwidth_down_kb'),
+            netdataDashboard.gaugeChart('发送', '12%', 'bandwidth_up_kb')
         ]
     },
 

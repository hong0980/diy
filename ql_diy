#!/usr/bin/env bash
hx=`ls $REPO_FLODER/bin/targets/*/*/*toolchain* | sed "s/openwrt/$IMG_USER/g"`
xx=`ls $REPO_FLODER/bin/targets/*/*/*imagebuil* | sed "s/openwrt/$IMG_USER/g"`

up_github() {
	echo "上传到github"
	export AUTH="Authorization: token $GITHUB_TOKEN"
	export cache_path='github.com/repos/hong0980/OpenWrt-Cache/releases'
	export cache_repo_id='84581161'
	while true; do
		ret=$(curl -sH "$AUTH" "https://api.$cache_path/tags/cache")
		echo $ret | jq -r '.assets[] | select(.name == "${hx##*/}").id' | xargs -n1 -i curl -X DELETE -H "$AUTH" "https://api.$cache_path/assets/{}"
		echo $ret | jq -r '.assets[] | select(.name == "${xx##*/}").id' | xargs -n1 -i curl -X DELETE -H "$AUTH" "https://api.$cache_path/assets/{}"
		echo $ret | jq -r '.assets[] | select(.name | contains ("'$IMG_USER'.img")).id' | xargs -n1 -i curl -X DELETE -H "$AUTH" "https://api.$cache_path/assets/{}"
		ls output | parallel --wc 'while true; do curl -T {} -H "$AUTH" -H "Content-Type: application/octet-stream" "https://uploads.$cache_path/$cache_repo_id/assets?name={}" && break || true; done'
		set +e
		for i in {1..5}; do
			curl -sL --fail https://github.com/hong0980/Actions-OpenWrt/releases/download/$SOURCE_USER-Cache/$IMG_USER.img.zst.0$i || break
		done | zstdmt -d -o /dev/null
		if [ $? -eq 0 ]; then
			break
		fi
	done
	set -e
}

grep -Eq "$IMG_USER-$TOOLS_HASH-cache" xd || {
	echo "打包cache"
	echo "OUTPUT_RELEASE=true" >>$GITHUB_ENV
	cp -v `find $REPO_FLODER/bin/targets/ -type f -name "*toolchain*"` output/${hx##*/} || true
	cp -v `find $REPO_FLODER/bin/targets/ -type f -name "*imagebuil*"` output/${xx##*/} || true
	[[ "$SOURCE_USER" = coolsnowwolf && "$TARGET_DEVICE" = r1-plus-lts ]] && {
		grep -Eq "uboot-rockchip" xd || \
		tar -zcf output/uboot-rockchip.tar.gz $REPO_FLODER/package/boot/uboot-rockchip
	}
	cd $REPO_FLODER
	du -h --max-depth=1 ./ --exclude=staging_dir
	du -h --max-depth=1 ./staging_dir
	# diff -u Makefile _Makefile | tee ../output/Makefile.patch
	tar --posix --use-compress-program zstdmt -cf ../output/$IMG_USER-$TOOLS_HASH-cache.tzst staging_dir/host* staging_dir/tool* .ccache
	# tar --mtime=now -Jcf ../output/$IMG_USER-$TOOLS_HASH-cache.tar.xz staging_dir/host* staging_dir/tool* .ccache
	find -type f -name "orangepi-r1-plus-lts-rk3328_defconfig" 2>/dev/null && \
	cp -v find -type f -name "orangepi-r1-plus-lts-rk3328_defconfig" ../output
	ls -lh ../output
}

# up_github || true
echo "SAVE_CACHE=''" >>$GITHUB_ENV
export -p

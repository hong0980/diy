#!/usr/bin/env bash
curl -sL https://raw.githubusercontent.com/klever1988/nanopi-openwrt/zstd-bin/zstd | sudo tee /usr/bin/zstd > /dev/null
hx=`ls $REPO_FLODER/bin/targets/*/*/*toolchain* | sed "s/openwrt/$IMG_USER/g"`
xx=`ls $REPO_FLODER/bin/targets/*/*/*imagebuil* | sed "s/openwrt/$IMG_USER/g"`

organize_pack() {
	echo "压缩-打包"
	cp -v `find $REPO_FLODER/bin/targets/ -type f -name "*toolchain*"` output/${hx##*/} || true
	cp -v `find $REPO_FLODER/bin/targets/ -type f -name "*imagebuil*"` output/${xx##*/} || true

	cd $REPO_FLODER
	[ -f _Makefile ] && mv -f _Makefile Makefile
	make clean
	rm -rf bin tmp logs
	cd ../
	sleep 10

	# sudo mount -o remount,compress=no,nodatacow,nodatasum $REPO_FLODER
	# pushd $REPO_FLODER
	# pv /dev/zero > zerospace || true
	# sync
	# rm -f zerospace
	# popd
	# sleep 30
	# sudo umount $REPO_FLODER

	mksquashfs $REPO_FLODER $REPO_FLODER.img
	zstdmt -c --long $REPO_FLODER.img | split --numeric=1 -b 2000m - output/$IMG_USER.img.zst.
	ls -lh output
}

up_github() {
	echo "上传到github"
	export AUTH="Authorization: token $GITHUB_TOKEN"
	export cache_path='github.com/repos/hong0980/OpenWrt-Cache/releases'
	export cache_repo_id='84581161'
	while true; do
		ret=$(curl -sH "$AUTH" "https://api.$cache_path/tags/cache")
		echo $ret | jq -r '.assets[] | select(.name == "${hx##*/}").id' | xargs -n1 -i curl -X DELETE -H "$AUTH" "https://api.$cache_path/assets/{}"
		echo $ret | jq -r '.assets[] | select(.name == "${xx##*/}").id' | xargs -n1 -i curl -X DELETE -H "$AUTH" "https://api.$cache_path/assets/{}"
		echo $ret | jq -r '.assets[] | select(.name | contains ("'$IMG_USER'.img")).id' | xargs -n1 -i curl -X DELETE -H "$AUTH" "https://api.$cache_path/assets/{}"
		ls output | parallel --wc 'while true; do curl -T {} -H "$AUTH" -H "Content-Type: application/octet-stream" "https://uploads.$cache_path/$cache_repo_id/assets?name={}" && break || true; done'
		set +e
		for i in {1..20}; do
			curl -sL --fail https://github.com/hong0980/OpenWrt-Cache/releases/download/cache/$IMG_USER.img.zst.0$i || break
		done | zstdmt -d -o /dev/null
		if [ $? -eq 0 ]; then
			break
		fi
	done
	set -e
}

export AUTH="Authorization: token $GITHUB_TOKEN"
export cache_path='github.com/repos/hong0980/OpenWrt-Cache/releases'
export cache_repo_id='84581161'
ret=$(curl -sH "$AUTH" "https://api.$cache_path/tags/cache")
echo $ret

[[ $VERSION = "mini" ]] && {
	echo "OUTPUT_RELEASE=''" >>$GITHUB_ENV
} || {
	organize_pack || true
	# up_github || true
	echo "OUTPUT_RELEASE=true" >>$GITHUB_ENV
}
echo "SAVE_CACHE=''" >>$GITHUB_ENV

export -p

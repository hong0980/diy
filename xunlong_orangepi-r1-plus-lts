#!/usr/bin/env bash
color() {
	case $1 in
		cy)
		echo -e "\033[1;33m$2\033[0m"
		;;
		cr)
		echo -e "\033[1;31m$2\033[0m"
		;;
		cg)
		echo -e "\033[1;32m$2\033[0m"
		;;
		cb)
		echo -e "\033[1;34m$2\033[0m"
		;;
	esac
}

status() {
	CHECK=$?
	END_TIME=$(date '+%H:%M:%S')
	_date=" ==>用时 $(($(date +%s -d "$END_TIME") - $(date +%s -d "$BEGIN_TIME"))) 秒"
	[[ $_date =~ [0-9]+ ]] || _date=""
	echo -en "\\033[45G[ "
	if [ $CHECK = 0 ]; then
		echo -e "$(color cg ✔)\033[0;39m ]${_date}"
	else
		echo -e "$(color cr ✕)\033[0;39m ]${_date}"
	fi
}

_packages() {
	for z in $@; do
		[[ "$(grep -v '^#' <<<$z)" ]] && echo "CONFIG_PACKAGE_$z=y" >> .config
	done
}

_printf() {
	awk '{printf "%s %-40s %s %s %s\n" ,$1,$2,$3,$4,$5}'
}

clone_url() {
	for x in $@; do
		if [[ "$(grep "^http" <<<$x)" ]]; then
				g=$(find package/ feeds/ -maxdepth 7 -type d -name ${x##*/})
				if ([[ -d "$g" && ${g##*/} != "build" ]] && rm -rf $g); then
					p="1"
				else
					p="0"; g="package/A/${x##*/}"
				fi

				if [[ "$(grep -E "trunk|branches" <<<$x)" ]]; then
					if svn export -q --force $x $g; then
						f="1"
					fi
				else
					if git clone -q $x $g; then
						f="1"
					fi
				fi
				[[ x$f = x ]] && echo -e "$(color cr 拉取) ${x##*/} [ $(color cr ✕) ]" | _printf
				[[ $f -lt $p ]] && echo -e "$(color cr 替换) ${x##*/} [ $(color cr ✕) ]" | _printf
				[[ $f = $p ]] && \
					echo -e "$(color cg 替换) ${x##*/} [ $(color cg ✔) ]" | _printf || \
					echo -e "$(color cb 添加) ${x##*/} [ $(color cb ✔) ]" | _printf
				unset -v p f g
		fi
	done
}
sudo -E apt-get -qq update
sudo -E apt-get -qq install rsync
#LOOP_DEVICE="r1p-lts"
#curl -fsSL https://raw.githubusercontent.com/hong0980/Actions-OpenWrt/master/init_build_environment.sh | sudo /bin/bash
#curl -sL https://raw.githubusercontent.com/klever1988/nanopi-openwrt/zstd-bin/zstd | sudo tee /usr/bin/zstd > /dev/null
#sudo chmod +x /usr/bin/zstd
#for i in {1..20}; do
#	curl -sL --fail https://github.com/klever1988/sshactions/releases/download/cache/lede.$LOOP_DEVICE.img.zst.0$i
#done | zstd -d -o lede.img || (truncate -s 30g lede.img && mkfs.btrfs -M lede.img)
#LOOP_DEVICE=$(losetup -f)
#sudo losetup -P --direct-io $LOOP_DEVICE lede.img
#mkdir lede && sudo mount -o nossd,compress=zstd $LOOP_DEVICE lede
#[ $BRANCH != 'master' ] && BRANCH='openwrt-18.06-k5.4'
#if [ -d 'lede/.git' ]; then
#	cd lede && rm -f zerospace && git config --local user.email "action@github.com" && git config --local user.name "GitHub Action"
#	git fetch && git reset --hard origin/$BRANCH && git clean -df
#else
#	sudo chown $USER:$(id -gn) lede && git clone -b $BRANCH --single-branch https://github.com/coolsnowwolf/lede lede
#fi
#cd lede
#if [ -d 'feeds' ]; then
#	pushd feeds/packages; git restore .; popd
#	pushd feeds/luci; git restore .; popd
#	pushd feeds/routing; git restore .; popd
#	pushd feeds/telephony; git restore .; popd
#	echo -e "$(color cy '更新软件....')\c"
#	BEGIN_TIME=$(date '+%H:%M:%S')
#	./scripts/feeds update -a 1>/dev/null 2>&1
#	status
#	echo -e "$(color cy '安装软件....')\c"
#	BEGIN_TIME=$(date '+%H:%M:%S')
#	./scripts/feeds install -a 1>/dev/null 2>&1
#	status
#fi
#[ $BRANCH != 'master' ] && BRANCH='openwrt-18.06'
#svn export https://github.com/openwrt/luci/branches/$BRANCH luci
#pushd luci
#ls -d */ | xargs -n1 -i diff -q {} ../lede/feeds/luci/{} | grep Only | grep lede | grep -E applications\|themes | awk '{print $4}' | xargs -n1 -i echo CONFIG_PACKAGE_{}=m > more_luci.txt
#popd

[[ -d 'lede/.git' ]] && {
	cd lede
	git fetch --all
	git reset --hard origin/master
	rm -rf feeds/* package/A dl
} || {
	echo -e "$(color cy '拉取源码....')\c"
	BEGIN_TIME=$(date '+%H:%M:%S')
	git clone https://github.com/coolsnowwolf/lede
	status
	cd lede
}

echo -e "$(color cy '更新软件....')\c"
BEGIN_TIME=$(date '+%H:%M:%S')
./scripts/feeds update -a 1>/dev/null 2>&1
status

echo -e "$(color cy '安装软件....')\c"
BEGIN_TIME=$(date '+%H:%M:%S')
./scripts/feeds install -a 1>/dev/null 2>&1
status

wget -qO package/base-files/files/etc/banner git.io/JoNK8
sed -i "/DISTRIB_DESCRIPTION/ {s/'$/-lean-$(date +%Y年%m月%d日)'/}" package/*/*/*/openwrt_release
sed -i "/IMG_PREFIX:/ {s/=/=lean-\$(shell date +%m%d-%H%M -d +8hour)-/}" include/image.mk
sed -i 's/option enabled.*/option enabled 1/' feeds/*/*/*/*/upnpd.config
sed -i "/listen_https/ {s/^/#/g}" package/*/*/*/files/uhttpd.config
#sed -i "s/ucidef_set_interfaces_lan_wan 'eth1' 'eth0'/ucidef_set_interfaces_lan_wan 'eth0' 'eth1'/" target/linux/rockchip/armv8/base-files/etc/board.d/02_network
sed -i "s/PATCHVER=5.15/PATCHVER=5.4/g" target/linux/rockchip/Makefile
sed -i "s/192.168.1.1/192.168.2.1/" package/*/*/*/config_generate
sed -i "{
		/upnp/d;/banner/d;/openwrt_release/d;/shadow/d
		s|zh_cn|zh_cn\nuci set luci.main.mediaurlbase=/luci-static/bootstrap|
		s|indexcache|indexcache\nsed -i 's/root::0:0:99999:7:::/root:\$1\$RysBCijW\$wIxPNkj9Ht9WhglXAXo4w0:18206:0:99999:7:::/g' /etc/shadow|
		}" package/*/*/*/zzz-default-settings

for d in $(find feeds/ package/ -type f -name "index.htm"); do
	if grep -q "Kernel Version" $d; then
		sed -i 's|os.date(.*|os.date("%F %X") .. " " .. translate(os.date("%A")),|' $d
		sed -i '/<%+footer%>/i<fieldset class="cbi-section">\n\t<legend><%:天气%></legend>\n\t<table width="100%" cellspacing="10">\n\t\t<tr><td width="10%"><%:本地天气%></td><td > <iframe width="900" height="120" frameborder="0" scrolling="no" hspace="0" src="//i.tianqi.com/?c=code&a=getcode&id=22&py=xiaoshan&icon=1"></iframe>\n\t\t<tr><td width="10%"><%:柯桥天气%></td><td > <iframe width="900" height="120" frameborder="0" scrolling="no" hspace="0" src="//i.tianqi.com/?c=code&a=getcode&id=22&py=keqiaoqv&icon=1"></iframe>\n\t\t<tr><td width="10%"><%:指数%></td><td > <iframe width="400" height="270" frameborder="0" scrolling="no" hspace="0" src="https://i.tianqi.com/?c=code&a=getcode&id=27&py=xiaoshan&icon=1"></iframe><iframe width="400" height="270" frameborder="0" scrolling="no" hspace="0" src="https://i.tianqi.com/?c=code&a=getcode&id=27&py=keqiaoqv&icon=1"></iframe>\n\t</table>\n</fieldset>\n\n<%-\n\tlocal incdir = util.libpath() .. "/view/admin_status/index/"\n\tif fs.access(incdir) then\n\t\tlocal inc\n\t\tfor inc in fs.dir(incdir) do\n\t\t\tif inc:match("%.htm$") then\n\t\t\t\tinclude("admin_status/index/" .. inc:gsub("%.htm$", ""))\n\t\t\tend\n\t\tend\n\t\end\n-%>\n' $d
	fi
done

: >.config
cat<<-EOF >.config
CONFIG_TARGET_rockchip=y
CONFIG_TARGET_rockchip_armv8=y
CONFIG_TARGET_rockchip_armv8_DEVICE_xunlong_orangepi-r1-plus-lts=y
CONFIG_TARGET_ROOTFS_PARTSIZE=500
CONFIG_PACKAGE_kmod-mt76x0u=y
CONFIG_PACKAGE_kmod-mt76x2u=y
CONFIG_PACKAGE_kmod-r8125=y
CONFIG_PACKAGE_kmod-rtl8821cu=y
CONFIG_PACKAGE_kmod-rtl8812au-ac=y
CONFIG_DRIVER_11AC_SUPPORT=y
CONFIG_DRIVER_11N_SUPPORT=y
CONFIG_DRIVER_11W_SUPPORT=y
CONFIG_KERNEL_BUILD_USER="win3gp"
CONFIG_KERNEL_BUILD_DOMAIN="OpenWrt"
CONFIG_PACKAGE_luci-app-accesscontrol=y
CONFIG_PACKAGE_luci-app-adblock-plus=y
CONFIG_PACKAGE_luci-app-ddnsto=y
CONFIG_PACKAGE_luci-app-filebrowser=y
CONFIG_PACKAGE_luci-app-filetransfer=y
CONFIG_PACKAGE_luci-app-oaf=y
CONFIG_PACKAGE_luci-app-passwall=y
CONFIG_PACKAGE_luci-app-rebootschedule=y
CONFIG_PACKAGE_luci-app-ssr-plus=y
CONFIG_PACKAGE_luci-app-ttyd=y
CONFIG_PACKAGE_luci-app-upnp=y
# CONFIG_PACKAGE_luci-app-unblockmusic is not set
# CONFIG_PACKAGE_luci-app-wireguard is not set
# CONFIG_PACKAGE_luci-app-ddns is not set
# CONFIG_PACKAGE_luci-app-zerotier is not set
# CONFIG_PACKAGE_luci-app-ipsec-vpnd is not set
# CONFIG_PACKAGE_luci-app-xlnetacc is not set
# CONFIG_PACKAGE_luci-app-uugamebooster is not set
EOF
git clone -q https://github.com/kiddin9/openwrt-packages package/

clone_url "
https://github.com/fw876/helloworld
https://github.com/destan19/OpenAppFilter
https://github.com/jerrykuku/luci-app-vssr
https://github.com/jerrykuku/lua-maxminddb
https://github.com/ntlf9t/luci-app-easymesh
https://github.com/zzsj0928/luci-app-pushbot
https://github.com/xiaorouji/openwrt-passwall
https://github.com/xiaorouji/openwrt-passwall2
https://github.com/jerrykuku/luci-app-jd-dailybonus
https://github.com/vernesong/OpenClash/trunk/luci-app-openclash
"
_packages "
luci-app-aria2
luci-app-cifs-mount
luci-app-cpufreq
luci-app-control-weburl
luci-app-openclash
luci-app-diskman
luci-app-hd-idle
luci-app-pushbot
luci-app-smartinfo
luci-app-softwarecenter
luci-app-transmission
luci-app-usb-printer
luci-app-vssr
luci-app-bypass
luci-app-ikoolproxy
luci-app-adbyby-plus
luci-app-dockerman
luci-app-netdata
luci-app-qbittorrent
#luci-app-smartdns
luci-app-aliyundrive-webdav
#luci-app-passwall2 htop lscpu lsscsi lsusb nano pciutils screen webui-aria2 zstd tar pv losetup
"
packages_url="axel lsscsi netdata luci-app-ddnsto luci-app-diskman luci-app-cowbping luci-app-dockerman luci-app-smartinfo luci-app-filebrowser AmuleWebUI-Reloaded luci-app-qbittorrent luci-app-softwarecenter luci-app-rebootschedule luci-app-cowb-speedlimit luci-app-network-settings luci-lib-docker luci-app-aria2"
for k in $packages_url; do
	clone_url "https://github.com/hong0980/build/trunk/$k"
done

[[ -d patches ]] || {
	mkdir patches && \
	wget -qP patches/ https://raw.githubusercontent.com/mingxiaoyu/R1-Plus-LTS/main/patches/0001-Add-pwm-fan.sh.patch && \
	wget -qP patches/ https://raw.githubusercontent.com/mingxiaoyu/R1-Plus-LTS/main/patches/0005-1.5g.patch && \
	git apply --reject --ignore-whitespace patches/*.patch
}
rm -rf patches
make defconfig 1>/dev/null 2>&1
make download -j16
find dl -size -1024c -exec ls -l {} \;
find dl -size -1024c -exec rm -f {} \;
make -j$(nproc) || make -j1 V=s
[[ `ls bin/targets/rockchip/armv8/*.img.gz` ]] && {
mkdir ../firmware
cp -v $(find bin/targets/ -type f -name "*.img.gz" -o -name "sha256sums") ../firmware
tar -zcPf ../firmware/packages.tar.gz bin/packages/
cp -v bin/targets/*/*/config.buildinfo ../firmware/
curl -fsSL git.io/file-transfer | sh
./transfer wet -s -p 16 --no-progress ../firmware/* 2>&1 | grep "Download Link"
}
